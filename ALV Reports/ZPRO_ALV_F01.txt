*&---------------------------------------------------------------------*
*&  Include           ZPRO_ALV_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  HIER-DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init.
  CALL SELECTION-SCREEN 0101.
ENDFORM.                    " INIT
*&---------------------------------------------------------------------*
*&      Form  SELECT_SCR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_scr .
  IF rb_list = 'X'.
    choice = 'L'.
  ELSE.
    choice = 'G'.
  ENDIF.
ENDFORM.                    " SELECT_SCR

*&---------------------------------------------------------------------*
*&      Form  validate_pid
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM validate_pid.
  SELECT COUNT(*) FROM z797_purchase_it INTO v_count WHERE
    purchaseid IN s_pid.
  IF v_count = 0.
    MESSAGE 'Purchaseid Does Not Exist.' TYPE 'E'.
*      MESSAGE e001(z681793_msg_class1).
  ENDIF.
ENDFORM.                    " VALIDATE_UID

*&---------------------------------------------------------------------*
*&      Form  validate_pcode
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM validate_pcode.
  SELECT COUNT(*) FROM z681797_product INTO v_count WHERE
    pr_code IN s_pcode.
  IF v_count = 0.
    MESSAGE 'Product code Does Not Exist.' TYPE 'E'.
*      MESSAGE e001(z681793_msg_class1).
  ENDIF.
ENDFORM.                    "validate_pid

*&---------------------------------------------------------------------*
*&      Form  DATA_FETCH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM data_fetch .
  SELECT * FROM z797_purchase_it INTO TABLE gt_pi
    WHERE purchaseid IN s_pid AND pr_code IN s_pcode.
  IF sy-subrc = 0.
    SELECT * FROM z681797_product INTO TABLE gt_pr
      FOR ALL ENTRIES IN gt_pi WHERE pr_code = gt_pi-pr_code.
    IF sy-subrc <> 0.
      MESSAGE 'Data Not Found in product table' TYPE 'E'.
    ENDIF.
  ENDIF.
ENDFORM.                    " DATA_FETCH

*&---------------------------------------------------------------------*
*&      Form  DATA_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*FORM data_display.
*  LOOP AT gt_output INTO gw_output.
*    AT NEW userid.
*      WRITE: 'User id: ',gw_output-userid.
*      SKIP.
*      ULINE AT (92).
*      WRITE :/ '|',3 'Purchase ID',15 '|',17 'Itemno', 25 '|',27
*'Product Code',39 '|',41 'Date of Purchase',58 '|',60 'Quantity',70
*'|', 72 'Price',79 '|', 81 'Net Price', 92 '|'.
*      ULINE AT (92).
*    ENDAT.
*
*    WRITE:/ '|',3 gw_output-purchaseid,15 '|',17 gw_output-itemno,25
*'|',27 gw_output-pr_code HOTSPOT,39 '|',41 gw_output-dateofpurchase,58
*'|',60 gw_output-quantity,70 '|',72 gw_output-price,79 '|',81
*gw_output-netprice, 92 '|'.
*    HIDE: gw_output-pr_code,gw_output-dateofpurchase.
*    ULINE AT (92).
*    AT END OF userid.
*      SUM.
*      WRITE:/70 'Total = ',gw_output-netprice.
*    ENDAT.
*  ENDLOOP.
*ENDFORM.                    " DATA_DISPLAY
*&---------------------------------------------------------------------*
*&      Form  DATA_PROCESS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM data_process .
  LOOP AT gt_pi INTO gw_pi.
    IF sy-subrc = 0.
      READ TABLE gt_pr INTO gw_pr WITH KEY pr_code = gw_pi-pr_code.
      IF sy-subrc = 0.
        MOVE-CORRESPONDING gw_pi TO gw_output.
        MOVE-CORRESPONDING gw_pr TO gw_output.
        gw_output-netprice = gw_output-price * gw_output-quantity.
        APPEND gw_output TO gt_output.
      ENDIF.
    ENDIF.
  ENDLOOP.
ENDFORM.                    " DATA_PROCESS




*&---------------------------------------------------------------------*
*&      Form  hier-display
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM fill_events.
  CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
   EXPORTING
     i_list_type           = 0
   IMPORTING
     et_events             = gt_events
*   EXCEPTIONS
*     LIST_TYPE_WRONG       = 1
*     OTHERS                = 2
            .
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  READ TABLE gt_events INTO gw_events WITH KEY name = 'TOP_OF_PAGE'.
  gw_events-form = 'FORM_PAGE'.
  MODIFY gt_events FROM gw_events INDEX sy-tabix.

  READ TABLE gt_events INTO gw_events WITH KEY name = 'TOP_OF_LIST'.
  gw_events-form = 'FORM_LIST'.
  MODIFY gt_events FROM gw_events INDEX sy-tabix.

ENDFORM.                    " HIER-DISPLAY

*&---------------------------------------------------------------------*
*&      Form  form_page
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM form_page.
  gw_header-typ = 'S'.
  gw_header-info = sy-datum.
  gw_header-key = 'Date: '.
  APPEND gw_header TO gt_header.
  CLEAR gw_header.

  gw_header-typ = 'S'.
  gw_header-info = '1'.
  gw_header-key = 'PageNo: '.
  APPEND gw_header TO gt_header.
  CLEAR gw_header.



  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = gt_header
*     I_LOGO             =
*     I_END_OF_LIST_GRID =
*     I_ALV_FORM         =
    .
  CLEAR gt_header.
ENDFORM.                    "form_page
*&---------------------------------------------------------------------*
*&      Form  form_list
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM form_list.
  gw_header-typ = 'H'.
  gw_header-info+23 = 'PURCHASE DETAILS'.
  APPEND gw_header TO gt_header.
  CLEAR gw_header.
  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = gt_header
*     I_LOGO             =
*     I_END_OF_LIST_GRID =
*     I_ALV_FORM         =
    .

  CLEAR gt_header.
ENDFORM.                    "form_list
*&---------------------------------------------------------------------*
*&      Form  LIST-DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM list_display.
  CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
   EXPORTING
*     I_INTERFACE_CHECK              = ' '
*     I_BYPASSING_BUFFER             =
*     I_BUFFER_ACTIVE                = ' '
     i_callback_program             = 'ZPRO_ALV'
*     I_CALLBACK_PF_STATUS_SET       = ' '
     i_callback_user_command        = 'USER_COMMAND'
*     I_STRUCTURE_NAME               =
     is_layout                      = gw_layout
     it_fieldcat                    = gt_fcat
*     IT_EXCLUDING                   =
*     IT_SPECIAL_GROUPS              =
     it_sort                        = gt_sort
*     IT_FILTER                      =
*     IS_SEL_HIDE                    =
*     I_DEFAULT                      = 'X'
*     I_SAVE                         = ' '
*     IS_VARIANT                     =
     it_events                      = gt_events
*     IT_EVENT_EXIT                  =
*     IS_PRINT                       =
*     IS_REPREP_ID                   =
*     I_SCREEN_START_COLUMN          = 0
*     I_SCREEN_START_LINE            = 0
*     I_SCREEN_END_COLUMN            = 0
*     I_SCREEN_END_LINE              = 0
*     IR_SALV_LIST_ADAPTER           =
*     IT_EXCEPT_QINFO                =
*     I_SUPPRESS_EMPTY_DATA          = ABAP_FALSE
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER        =
*     ES_EXIT_CAUSED_BY_USER         =
    TABLES
      t_outtab                       = gt_output
*   EXCEPTIONS
*     PROGRAM_ERROR                  = 1
*     OTHERS                         = 2
            .
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.                    " LIST-DISPLAY
*&---------------------------------------------------------------------*
*&      Form  FILL_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM fill_fcat.

  gw_fcat-fieldname = 'PURCHASEID'.
  gw_fcat-tabname = 'GT_OUTPUT'.
  gw_fcat-outputlen = 20.
  gw_fcat-seltext_s = 'PID'.
  gw_fcat-seltext_m = 'PURCHASE ID'.
*  gw_fcat-key = 'X'.
*  gw_fcat-col_pos = 1.

  APPEND gw_fcat TO gt_fcat.
  CLEAR gw_fcat.

  gw_fcat-fieldname = 'ITEMNO'.
*  gw_fcat-col_pos = 2.
  gw_fcat-tabname = 'GT_OUTPUT'.
  gw_fcat-outputlen = 10.
  gw_fcat-seltext_s = 'ITEMNO'.
*  gw_fcat-seltext_m = ''.
*  gw_fcat-hotspot = 'X'.

  APPEND gw_fcat TO gt_fcat.
  CLEAR gw_fcat.

  gw_fcat-fieldname = 'PR_CODE'.
*   gw_fcat-col_pos = 1.
  gw_fcat-tabname = 'GT_OUTPUT'.
*  gw_fcat-ref_tabname = 'Z681797_USER_DETAILS'.
*  gw_fcat-ref_fieldname = 'EMAILID'.
  gw_fcat-outputlen = 15.
  gw_fcat-seltext_s = 'PCODE'.
  gw_fcat-seltext_m = 'PRODUCT CODE'.
*  gw_fcat-hotspot = 'X'.
  APPEND gw_fcat TO gt_fcat.
  CLEAR gw_fcat.

  gw_fcat-fieldname = 'QUANTITY'.
  gw_fcat-tabname = 'GT_OUTPUT'.
*  gw_fcat-col_pos = 1.
*  gw_fcat-ref_tabname = 'Z681797_USER_DETAILS'.
*  gw_fcat-ref_fieldname = 'EMAILID'.
  gw_fcat-outputlen = 10.
  gw_fcat-seltext_s = 'QUANTITY'.
*  gw_fcat-seltext_m = 'DATE OF JOINING'.
*  gw_fcat-emphasize = 'C611'.
*  gw_fcat-hotspot = 'X'.
*  gw_fcat-key = 'X'.
  APPEND gw_fcat TO gt_fcat.
  CLEAR gw_fcat.


  gw_fcat-fieldname = 'PRICE'.
  gw_fcat-tabname = 'GT_OUTPUT'.
*  gw_fcat-col_pos = 1.
*  gw_fcat-ref_tabname = 'Z681797_USER_DETAILS'.
*  gw_fcat-ref_fieldname = 'EMAILID'.
  gw_fcat-outputlen = 10.
  gw_fcat-seltext_s = 'PRICE'.
*  gw_fcat-seltext_m = 'ADDRESS'.
*  gw_fcat-emphasize = 'C611'.
*  gw_fcat-key = 'X'.
*  gw_fcat-hotspot = 'X'.
  APPEND gw_fcat TO gt_fcat.
  CLEAR gw_fcat.

  gw_fcat-fieldname = 'NETPRICE'.
  gw_fcat-tabname = 'GT_OUTPUT'.
*  gw_fcat-col_pos = 1.
*  gw_fcat-ref_tabname = 'Z681797_USER_DETAILS'.
*  gw_fcat-ref_fieldname = 'EMAILID'.
  gw_fcat-outputlen = 10.
  gw_fcat-seltext_s = 'NET PRICE'.
*  gw_fcat-seltext_m = 'ADDRESS'.
*  gw_fcat-emphasize = 'C611'.
*  gw_fcat-key = 'X'.
*  gw_fcat-hotspot = 'X'.
  gw_fcat-do_sum = 'X'.
  APPEND gw_fcat TO gt_fcat.
  CLEAR gw_fcat.

ENDFORM.                    " FILL_FCAT
*&---------------------------------------------------------------------*
*&      Form  FILL_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM fill_layout .
  gw_layout-zebra = 'X'.
*  gw_layout-confirmation_prompt = 'X'.
*  gw_layout-colwidth_optimize = 'X'.
ENDFORM.                    " FILL_LAYOUT
*&---------------------------------------------------------------------*
*&      Form  FILL_SORT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM fill_sort.
  gw_sort-fieldname = 'PURCHASEID'.
  gw_sort-tabname = 'GT_OUTPUT'.
  gw_sort-up = 'X'.
  gw_sort-subtot = 'X'.
  APPEND gw_sort TO gt_sort.
  CLEAR gw_sort.

  gw_sort-fieldname = 'ITEMNO'.
  gw_sort-tabname = 'GT_OUTPUT'.
  gw_sort-up = 'X'.
  gw_sort-subtot = 'X'.
  APPEND gw_sort TO gt_sort.
  CLEAR gw_sort.
ENDFORM.                    " FILL_SORT

*&---------------------------------------------------------------------*
*&      Form  user_command
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->UCOMM      text
*      -->SELFIELD   text
*----------------------------------------------------------------------*
FORM user_command USING ucomm TYPE sy-ucomm selfield TYPE slis_selfield.
  IF selfield-fieldname = 'PURCHASEID'.
    WRITE: 'Interactive Program'.
  ENDIF.
ENDFORM.                    "user_command
*&---------------------------------------------------------------------*
*&      Form  DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display .
  IF rb_list = 'X'.
    PERFORM list_display.
  ELSE.
    PERFORM grid_display.
  ENDIF.
ENDFORM.                    " DISPLAY
*&---------------------------------------------------------------------*
*&      Form  GRID_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM grid_display.
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
   EXPORTING
*     I_INTERFACE_CHECK                 = ' '
*     I_BYPASSING_BUFFER                = ' '
*     I_BUFFER_ACTIVE                   = ' '
     I_CALLBACK_PROGRAM                = 'ZPRO_ALV'
*     I_CALLBACK_PF_STATUS_SET          = ' '
     I_CALLBACK_USER_COMMAND           = 'USER_COMMAND'
*     I_CALLBACK_TOP_OF_PAGE            = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME                  =
*     I_BACKGROUND_ID                   = ' '
*     I_GRID_TITLE                      =
*     I_GRID_SETTINGS                   =
     IS_LAYOUT                         = gw_layout
     IT_FIELDCAT                       = gt_fcat
*     IT_EXCLUDING                      =
*     IT_SPECIAL_GROUPS                 =
     IT_SORT                           = gt_sort
*     IT_FILTER                         =
*     IS_SEL_HIDE                       =
*     I_DEFAULT                         = 'X'
*     I_SAVE                            = ' '
*     IS_VARIANT                        =
     IT_EVENTS                         = gt_events
*     IT_EVENT_EXIT                     =
*     IS_PRINT                          =
*     IS_REPREP_ID                      =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE                 = 0
*     I_HTML_HEIGHT_TOP                 = 0
*     I_HTML_HEIGHT_END                 = 0
*     IT_ALV_GRAPHICS                   =
*     IT_HYPERLINK                      =
*     IT_ADD_FIELDCAT                   =
*     IT_EXCEPT_QINFO                   =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
    TABLES
      t_outtab                          = gt_output
*   EXCEPTIONS
*     PROGRAM_ERROR                     = 1
*     OTHERS                            = 2
            .
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.                    " GRID_DISPLAY
